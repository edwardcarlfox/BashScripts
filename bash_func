#!/bin/bash
export LANG=en_US.utf8

#case insensitive match
shopt -s nocasematch

#Go up to parent directory
#no parameter: equivalent to cd ..
#parameter is a number: go to number of levels of parent directory
#parameter is a string: go to the nearest parent directory matching the string
function up {
	if [[ $# -eq 0 ]]
	then
		cd ..
	elif [[ $# -eq 1 ]]
	then
		#for i in {1..$1} does not work, as $1 is a variable
		let levels=0
		for (( i=1; i <= $1; i++ ))
		do
			cd ..
			let levels++
		done
		#$1 is not a number
		if [[ $levels -eq 0 ]]
		then
			let found=1
			cwd="$(pwd)"
			while [[ ${pwd} != / ]]
			do
				if [[ ${PWD##*/} =~ ^$1.* ]]
				then
					let found=0
					break
				fi
				cd ..
			done
			if [[ found -eq 1 ]]
			then
				cd $cwd
			fi
		fi
	fi
	la
}

#Go to a subdirectory
#no parameter: if there is only one subdirectory, go there
#no parameter: list all subdirectories and choose one to go to
#one parameter: list all matching subdirectories and choose one to go to
function dn {
	prefix=
	if [[ $# -ne 0 ]]
	then
		prefix=$1
	fi
	declare -a dirs
	let index=0
	for i in `find . -maxdepth 1 -type d`
	do
		#if exact match, go there directly
		if [[ ${i##*/} == $prefix ]]
		then
			cd ${i##*/}
			la
			return
		fi
		if [[ ${i##*/} =~ ^$prefix.* ]] && [[ ${i##*/} != . ]]
		then
			let index++
			dirs[$index]=${i##*/}
		fi
	done
	#if no match, do nothing
	if [[ $index -eq 0 ]]
	then
		la
		return
	fi
	#only one subdirectory
	if [[ $index -eq 1 ]]
	then
		cd ${dirs[1]}
	else
		let index=0
		for d in ${dirs[@]}
		do
			let index++
			echo $index: $d
		done
		echo Choose directory:
		read choice
		if [[ $choice -ge 1 ]] && [[ $choice -le $index ]]
		then
			cd ${dirs[$choice]}
		fi
	fi
	la
}
